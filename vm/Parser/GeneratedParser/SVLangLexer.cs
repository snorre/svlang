//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Dev\Egne\svlang\vm\Parser\Grammar\\SVLang.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace SVLang.Parser.GeneratedParser {
using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class SVLangLexer : Lexer {
	public const int
		BOOL=1, NUM=2, STRING=3;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"BOOL", "NUM", "STRING"
	};


	public SVLangLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
	};
	private static readonly string[] _SymbolicNames = {
		null, "BOOL", "NUM", "STRING"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SVLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x5%\b\x1\x4\x2\t"+
		"\x2\x4\x3\t\x3\x4\x4\t\x4\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x5\x2\x13\n\x2\x3\x3\x5\x3\x16\n\x3\x3\x3\x6\x3\x19\n\x3\r\x3"+
		"\xE\x3\x1A\x3\x4\x3\x4\a\x4\x1F\n\x4\f\x4\xE\x4\"\v\x4\x3\x4\x3\x4\x2"+
		"\x2\x5\x3\x3\x5\x4\a\x5\x3\x2\x4\x3\x2\x32;\x5\x2\f\f\xF\xF$$(\x2\x3\x3"+
		"\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x3\x12\x3\x2\x2\x2\x5\x15"+
		"\x3\x2\x2\x2\a\x1C\x3\x2\x2\x2\t\n\av\x2\x2\n\v\at\x2\x2\v\f\aw\x2\x2"+
		"\f\x13\ag\x2\x2\r\xE\ah\x2\x2\xE\xF\a\x63\x2\x2\xF\x10\an\x2\x2\x10\x11"+
		"\au\x2\x2\x11\x13\ag\x2\x2\x12\t\x3\x2\x2\x2\x12\r\x3\x2\x2\x2\x13\x4"+
		"\x3\x2\x2\x2\x14\x16\a/\x2\x2\x15\x14\x3\x2\x2\x2\x15\x16\x3\x2\x2\x2"+
		"\x16\x18\x3\x2\x2\x2\x17\x19\t\x2\x2\x2\x18\x17\x3\x2\x2\x2\x19\x1A\x3"+
		"\x2\x2\x2\x1A\x18\x3\x2\x2\x2\x1A\x1B\x3\x2\x2\x2\x1B\x6\x3\x2\x2\x2\x1C"+
		" \a$\x2\x2\x1D\x1F\n\x3\x2\x2\x1E\x1D\x3\x2\x2\x2\x1F\"\x3\x2\x2\x2 \x1E"+
		"\x3\x2\x2\x2 !\x3\x2\x2\x2!#\x3\x2\x2\x2\" \x3\x2\x2\x2#$\a$\x2\x2$\b"+
		"\x3\x2\x2\x2\a\x2\x12\x15\x1A \x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace SVLang.Parser.GeneratedParser
