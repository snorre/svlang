//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Dev\Egne\svlang\vm\Parser\Grammar\\SVLang.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace SVLang.Parser.GeneratedParser {
using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class SVLangLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		BOOL=10, NUM=11, STRING=12, VOID=13, ID=14, WS=15, EOL=16;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"BOOL", "NUM", "STRING", "VOID", "ID", "NONDIGIT", "DIGIT", "HYPHEN", 
		"WS", "EOL"
	};


	public SVLangLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'['", "']'", "'('", "')'", "'='", "'->'", "'{'", "'}'", "'first'", 
		null, null, null, "'void'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, "BOOL", "NUM", 
		"STRING", "VOID", "ID", "WS", "EOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SVLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x12\x99\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x3\x2\x3"+
		"\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3"+
		"\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3"+
		"\v\x3\v\x3\v\x3\v\x3\v\x5\vJ\n\v\x3\f\x5\fM\n\f\x3\f\x6\fP\n\f\r\f\xE"+
		"\fQ\x3\r\x3\r\a\rV\n\r\f\r\xE\rY\v\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xE\x3\xF\x3\xF\x3\xF\a\xF\x65\n\xF\f\xF\xE\xFh\v\xF\x3\xF\x6\xFk\n"+
		"\xF\r\xF\xE\xFl\x3\xF\x3\xF\x3\xF\x6\xFr\n\xF\r\xF\xE\xFs\x3\xF\x3\xF"+
		"\x3\xF\x6\xFy\n\xF\r\xF\xE\xFz\a\xF}\n\xF\f\xF\xE\xF\x80\v\xF\x5\xF\x82"+
		"\n\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x6\x13\x8B\n\x13"+
		"\r\x13\xE\x13\x8C\x3\x13\x3\x13\x3\x14\x5\x14\x92\n\x14\x3\x14\x3\x14"+
		"\x6\x14\x96\n\x14\r\x14\xE\x14\x97\x2\x2\x15\x3\x3\x5\x4\a\x5\t\x6\v\a"+
		"\r\b\xF\t\x11\n\x13\v\x15\f\x17\r\x19\xE\x1B\xF\x1D\x10\x1F\x2!\x2#\x2"+
		"%\x11\'\x12\x3\x2\x6\x5\x2\f\f\xF\xF$$\x4\x2\x43\\\x63|\x3\x2\x32;\x4"+
		"\x2\v\v\"\"\xA6\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2"+
		"\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2"+
		"\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2"+
		"\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2%\x3\x2"+
		"\x2\x2\x2\'\x3\x2\x2\x2\x3)\x3\x2\x2\x2\x5+\x3\x2\x2\x2\a-\x3\x2\x2\x2"+
		"\t/\x3\x2\x2\x2\v\x31\x3\x2\x2\x2\r\x33\x3\x2\x2\x2\xF\x36\x3\x2\x2\x2"+
		"\x11\x38\x3\x2\x2\x2\x13:\x3\x2\x2\x2\x15I\x3\x2\x2\x2\x17L\x3\x2\x2\x2"+
		"\x19S\x3\x2\x2\x2\x1B\\\x3\x2\x2\x2\x1D\x81\x3\x2\x2\x2\x1F\x83\x3\x2"+
		"\x2\x2!\x85\x3\x2\x2\x2#\x87\x3\x2\x2\x2%\x8A\x3\x2\x2\x2\'\x95\x3\x2"+
		"\x2\x2)*\a]\x2\x2*\x4\x3\x2\x2\x2+,\a_\x2\x2,\x6\x3\x2\x2\x2-.\a*\x2\x2"+
		".\b\x3\x2\x2\x2/\x30\a+\x2\x2\x30\n\x3\x2\x2\x2\x31\x32\a?\x2\x2\x32\f"+
		"\x3\x2\x2\x2\x33\x34\a/\x2\x2\x34\x35\a@\x2\x2\x35\xE\x3\x2\x2\x2\x36"+
		"\x37\a}\x2\x2\x37\x10\x3\x2\x2\x2\x38\x39\a\x7F\x2\x2\x39\x12\x3\x2\x2"+
		"\x2:;\ah\x2\x2;<\ak\x2\x2<=\at\x2\x2=>\au\x2\x2>?\av\x2\x2?\x14\x3\x2"+
		"\x2\x2@\x41\av\x2\x2\x41\x42\at\x2\x2\x42\x43\aw\x2\x2\x43J\ag\x2\x2\x44"+
		"\x45\ah\x2\x2\x45\x46\a\x63\x2\x2\x46G\an\x2\x2GH\au\x2\x2HJ\ag\x2\x2"+
		"I@\x3\x2\x2\x2I\x44\x3\x2\x2\x2J\x16\x3\x2\x2\x2KM\a/\x2\x2LK\x3\x2\x2"+
		"\x2LM\x3\x2\x2\x2MO\x3\x2\x2\x2NP\x5!\x11\x2ON\x3\x2\x2\x2PQ\x3\x2\x2"+
		"\x2QO\x3\x2\x2\x2QR\x3\x2\x2\x2R\x18\x3\x2\x2\x2SW\a$\x2\x2TV\n\x2\x2"+
		"\x2UT\x3\x2\x2\x2VY\x3\x2\x2\x2WU\x3\x2\x2\x2WX\x3\x2\x2\x2XZ\x3\x2\x2"+
		"\x2YW\x3\x2\x2\x2Z[\a$\x2\x2[\x1A\x3\x2\x2\x2\\]\ax\x2\x2]^\aq\x2\x2^"+
		"_\ak\x2\x2_`\a\x66\x2\x2`\x1C\x3\x2\x2\x2\x61\x66\x5\x1F\x10\x2\x62\x65"+
		"\x5\x1F\x10\x2\x63\x65\x5!\x11\x2\x64\x62\x3\x2\x2\x2\x64\x63\x3\x2\x2"+
		"\x2\x65h\x3\x2\x2\x2\x66\x64\x3\x2\x2\x2\x66g\x3\x2\x2\x2g\x82\x3\x2\x2"+
		"\x2h\x66\x3\x2\x2\x2ik\x5\x1F\x10\x2ji\x3\x2\x2\x2kl\x3\x2\x2\x2lj\x3"+
		"\x2\x2\x2lm\x3\x2\x2\x2mn\x3\x2\x2\x2nq\x5#\x12\x2or\x5\x1F\x10\x2pr\x5"+
		"!\x11\x2qo\x3\x2\x2\x2qp\x3\x2\x2\x2rs\x3\x2\x2\x2sq\x3\x2\x2\x2st\x3"+
		"\x2\x2\x2t~\x3\x2\x2\x2ux\x5#\x12\x2vy\x5\x1F\x10\x2wy\x5!\x11\x2xv\x3"+
		"\x2\x2\x2xw\x3\x2\x2\x2yz\x3\x2\x2\x2zx\x3\x2\x2\x2z{\x3\x2\x2\x2{}\x3"+
		"\x2\x2\x2|u\x3\x2\x2\x2}\x80\x3\x2\x2\x2~|\x3\x2\x2\x2~\x7F\x3\x2\x2\x2"+
		"\x7F\x82\x3\x2\x2\x2\x80~\x3\x2\x2\x2\x81\x61\x3\x2\x2\x2\x81j\x3\x2\x2"+
		"\x2\x82\x1E\x3\x2\x2\x2\x83\x84\t\x3\x2\x2\x84 \x3\x2\x2\x2\x85\x86\t"+
		"\x4\x2\x2\x86\"\x3\x2\x2\x2\x87\x88\a/\x2\x2\x88$\x3\x2\x2\x2\x89\x8B"+
		"\t\x5\x2\x2\x8A\x89\x3\x2\x2\x2\x8B\x8C\x3\x2\x2\x2\x8C\x8A\x3\x2\x2\x2"+
		"\x8C\x8D\x3\x2\x2\x2\x8D\x8E\x3\x2\x2\x2\x8E\x8F\b\x13\x2\x2\x8F&\x3\x2"+
		"\x2\x2\x90\x92\a\xF\x2\x2\x91\x90\x3\x2\x2\x2\x91\x92\x3\x2\x2\x2\x92"+
		"\x93\x3\x2\x2\x2\x93\x96\a\f\x2\x2\x94\x96\a\xF\x2\x2\x95\x91\x3\x2\x2"+
		"\x2\x95\x94\x3\x2\x2\x2\x96\x97\x3\x2\x2\x2\x97\x95\x3\x2\x2\x2\x97\x98"+
		"\x3\x2\x2\x2\x98(\x3\x2\x2\x2\x14\x2ILQW\x64\x66lqsxz~\x81\x8C\x91\x95"+
		"\x97\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace SVLang.Parser.GeneratedParser
