//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Dev\Egne\svlang\vm\Parser\Grammar\\SVLang.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace SVLang.Parser.GeneratedParser {
using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class SVLangLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		BOOL=10, NUM=11, STRING=12, VOID=13, ID=14, WS=15, EOL=16;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"BOOL", "NUM", "STRING", "VOID", "ID", "NONDIGIT", "DIGIT", "WS", "EOL"
	};


	public SVLangLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'['", "']'", "'('", "')'", "'='", "'->'", "'{'", "'}'", "'first'", 
		null, null, null, "'void'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, "BOOL", "NUM", 
		"STRING", "VOID", "ID", "WS", "EOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "SVLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x12{\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x3\x2\x3\x2\x3\x3\x3\x3"+
		"\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\b\x3\b\x3\t\x3"+
		"\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3"+
		"\v\x3\v\x5\vH\n\v\x3\f\x5\fK\n\f\x3\f\x6\fN\n\f\r\f\xE\fO\x3\r\x3\r\a"+
		"\rT\n\r\f\r\xE\rW\v\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3"+
		"\xF\x3\xF\a\xF\x63\n\xF\f\xF\xE\xF\x66\v\xF\x3\x10\x3\x10\x3\x11\x3\x11"+
		"\x3\x12\x6\x12m\n\x12\r\x12\xE\x12n\x3\x12\x3\x12\x3\x13\x5\x13t\n\x13"+
		"\x3\x13\x3\x13\x6\x13x\n\x13\r\x13\xE\x13y\x2\x2\x14\x3\x3\x5\x4\a\x5"+
		"\t\x6\v\a\r\b\xF\t\x11\n\x13\v\x15\f\x17\r\x19\xE\x1B\xF\x1D\x10\x1F\x2"+
		"!\x2#\x11%\x12\x3\x2\x6\x5\x2\f\f\xF\xF$$\x4\x2\x43\\\x63|\x3\x2\x32;"+
		"\x4\x2\v\v\"\"\x82\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2"+
		"\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2"+
		"\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2"+
		"\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2#\x3"+
		"\x2\x2\x2\x2%\x3\x2\x2\x2\x3\'\x3\x2\x2\x2\x5)\x3\x2\x2\x2\a+\x3\x2\x2"+
		"\x2\t-\x3\x2\x2\x2\v/\x3\x2\x2\x2\r\x31\x3\x2\x2\x2\xF\x34\x3\x2\x2\x2"+
		"\x11\x36\x3\x2\x2\x2\x13\x38\x3\x2\x2\x2\x15G\x3\x2\x2\x2\x17J\x3\x2\x2"+
		"\x2\x19Q\x3\x2\x2\x2\x1BZ\x3\x2\x2\x2\x1D_\x3\x2\x2\x2\x1Fg\x3\x2\x2\x2"+
		"!i\x3\x2\x2\x2#l\x3\x2\x2\x2%w\x3\x2\x2\x2\'(\a]\x2\x2(\x4\x3\x2\x2\x2"+
		")*\a_\x2\x2*\x6\x3\x2\x2\x2+,\a*\x2\x2,\b\x3\x2\x2\x2-.\a+\x2\x2.\n\x3"+
		"\x2\x2\x2/\x30\a?\x2\x2\x30\f\x3\x2\x2\x2\x31\x32\a/\x2\x2\x32\x33\a@"+
		"\x2\x2\x33\xE\x3\x2\x2\x2\x34\x35\a}\x2\x2\x35\x10\x3\x2\x2\x2\x36\x37"+
		"\a\x7F\x2\x2\x37\x12\x3\x2\x2\x2\x38\x39\ah\x2\x2\x39:\ak\x2\x2:;\at\x2"+
		"\x2;<\au\x2\x2<=\av\x2\x2=\x14\x3\x2\x2\x2>?\av\x2\x2?@\at\x2\x2@\x41"+
		"\aw\x2\x2\x41H\ag\x2\x2\x42\x43\ah\x2\x2\x43\x44\a\x63\x2\x2\x44\x45\a"+
		"n\x2\x2\x45\x46\au\x2\x2\x46H\ag\x2\x2G>\x3\x2\x2\x2G\x42\x3\x2\x2\x2"+
		"H\x16\x3\x2\x2\x2IK\a/\x2\x2JI\x3\x2\x2\x2JK\x3\x2\x2\x2KM\x3\x2\x2\x2"+
		"LN\x5!\x11\x2ML\x3\x2\x2\x2NO\x3\x2\x2\x2OM\x3\x2\x2\x2OP\x3\x2\x2\x2"+
		"P\x18\x3\x2\x2\x2QU\a$\x2\x2RT\n\x2\x2\x2SR\x3\x2\x2\x2TW\x3\x2\x2\x2"+
		"US\x3\x2\x2\x2UV\x3\x2\x2\x2VX\x3\x2\x2\x2WU\x3\x2\x2\x2XY\a$\x2\x2Y\x1A"+
		"\x3\x2\x2\x2Z[\ax\x2\x2[\\\aq\x2\x2\\]\ak\x2\x2]^\a\x66\x2\x2^\x1C\x3"+
		"\x2\x2\x2_\x64\x5\x1F\x10\x2`\x63\x5\x1F\x10\x2\x61\x63\x5!\x11\x2\x62"+
		"`\x3\x2\x2\x2\x62\x61\x3\x2\x2\x2\x63\x66\x3\x2\x2\x2\x64\x62\x3\x2\x2"+
		"\x2\x64\x65\x3\x2\x2\x2\x65\x1E\x3\x2\x2\x2\x66\x64\x3\x2\x2\x2gh\t\x3"+
		"\x2\x2h \x3\x2\x2\x2ij\t\x4\x2\x2j\"\x3\x2\x2\x2km\t\x5\x2\x2lk\x3\x2"+
		"\x2\x2mn\x3\x2\x2\x2nl\x3\x2\x2\x2no\x3\x2\x2\x2op\x3\x2\x2\x2pq\b\x12"+
		"\x2\x2q$\x3\x2\x2\x2rt\a\xF\x2\x2sr\x3\x2\x2\x2st\x3\x2\x2\x2tu\x3\x2"+
		"\x2\x2ux\a\f\x2\x2vx\a\xF\x2\x2ws\x3\x2\x2\x2wv\x3\x2\x2\x2xy\x3\x2\x2"+
		"\x2yw\x3\x2\x2\x2yz\x3\x2\x2\x2z&\x3\x2\x2\x2\r\x2GJOU\x62\x64nswy\x3"+
		"\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace SVLang.Parser.GeneratedParser
